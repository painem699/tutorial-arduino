#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <TM1637Display.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Wire.h>
#include <Servo.h>

#define ledR 46
#define ledY 48
#define ledG 50

Servo myservo; // membuat variabel servo untuk dikendalikan
int pos = 0; // deklarasi variabel untuk posisi sudut

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT);//nyeluk oled gen iso murup

///////////////////////////////////seven segment////////////////////////////////////////////////////////////
#define CLK 2
#define DIO 3

TM1637Display tm(CLK, DIO);
//uint8_t data[] = { 0xff, 0xff, 0xff, 0xff };
uint8_t blank[] = { 0x00, 0x00, 0x00, 0x00 };
String password = "1234";
String inpws;
int a = 0,b = 0,c = 0,d = 0;
int total;
int cout = 0;
int cin = 0;

LiquidCrystal_I2C lcd(0x27, 20, 4);

const int ROW_NUM = 4;     //wiring four rows dari kiri
const int COLUMN_NUM = 4;  //four columns

char keys[ROW_NUM][COLUMN_NUM] = {
  { '1', '2', '3', 'A' },
  { '4', '5', '6', 'B' },
  { '7', '8', '9', 'C' },
  { '*', '0', '#', 'D' }
};

byte pin_rows[ROW_NUM] = { 22, 24, 26, 28 };       //connect to the row pinouts of the keypad
byte pin_column[COLUMN_NUM] = { 23, 25, 27, 29 };  //connect to the column pinouts of the keypad

Keypad keypad = Keypad(makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM);

byte potensio= A0;



int kondisi = 0;
int nilai;
int output;
unsigned int counter = 0;

int pbuzzer = 3;

const unsigned char homelogo [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x00, 0x3f, 0xe0, 0xfc, 0x3f, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x7e, 0x3f, 0x83, 0xf0, 0x0f, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x7e, 0x3c, 0x0f, 0xc3, 0xc1, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x7e, 0x30, 0x7e, 0x0f, 0xf0, 0x7e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x7e, 0x01, 0xf8, 0x3f, 0xfe, 0x1f, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x7e, 0x07, 0xc1, 0xff, 0xff, 0x83, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x78, 0x3f, 0x07, 0xff, 0xff, 0xe0, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x60, 0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x1f, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x03, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0xc0, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x1f, 0x83, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x7c, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3e, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc1, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0x83, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x0f, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xf0, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x3e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7c, 0x1f, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0x87, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xe1, 0xff, 0xff, 
	0xff, 0xff, 0x1f, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xf8, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() 
{
  pinMode(ledR, OUTPUT); //varibel ledMerah menjadi output
  pinMode(ledG, OUTPUT); //varibel ledKuning menjadi output
  pinMode(ledY, OUTPUT); //varibel ledHijau menjadi output


  pinMode(pbuzzer, OUTPUT);
  tm.showNumberDec(0, true);
  tm.setBrightness(4);
  lcd.begin(20,4);
  lcd.init();
  lcd.backlight();
  lcd.setCursor (6,1);
  lcd.print("WELCOME");

  myservo.attach(6);

  oled.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  oled.clearDisplay(); //clear sebelum tampilan baru
  oled.drawBitmap(0, 0, homelogo,128,64, WHITE); 
  oled.display(); //tampilkan data

  delay(1000);
  oled.clearDisplay();
  oled.display();
}

void loop() 
{
  while (kondisi == 0)
  {
    char key = keypad.getKey();
    lcd.setCursor (0,0);
    lcd.print("PILIH MENU");
    lcd.setCursor (0,1);
    lcd.print("1.Potensiometer");
    lcd.setCursor (0,2);
    lcd.print("2.Count UP");
    lcd.setCursor (0,3);
    lcd.print("3.Count Down");

    digitalWrite(ledR, HIGH);
    digitalWrite(ledY, HIGH);
    digitalWrite(ledG, HIGH);


    if (key)
    {
      if (key == '1' )
      {
        kondisi = 1;
        lcd.clear();
      }
      else if (key == '2' )
      {
        kondisi = 2;
        lcd.clear();
      }
      else if (key == '3' )
      {
        kondisi = 3;
        lcd.clear();
      }

    }

  }

  while (kondisi == 1)
  {
    char key = keypad.getKey();
    nilai= analogRead(potensio);
    output= map(nilai, 0, 1023, 0, 100);
    lcd.setCursor (0,0);
    lcd.print("POTENSIOMETER :");
    lcd.setCursor (0,1);
    lcd.print("sensor: ");
    lcd.print(nilai);
    lcd.setCursor (0,2);
    lcd.print("output: ");
    lcd.print(output);

    digitalWrite(ledG, HIGH);
    digitalWrite(ledY, LOW);
    digitalWrite(ledR, LOW);

    if (key)
    {
      if (key == '*' )
      {
        kondisi = 0;
        lcd.clear();
      }
    }
  }

  while (kondisi == 2)
  {
    int z = 0;
    char key = keypad.getKey();
    lcd.setCursor (0,0);
    lcd.print("PASSWORD :");
    if (key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '*' && key != '#')
      {
        if (key == '0')
        {
          a = b;
          b = c;
          c = d;
          d = 0;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '1')
        {
          a = b;
          b = c;
          c = d;
          d = 1;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '2')
        {
          a = b;
          b = c;
          c = d;
          d = 2;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '3')
        {
          a = b;
          b = c;
          c = d;
          d = 3;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '4')
        {
          a = b;
          b = c;
          c = d;
          d = 4;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '5')
        {
          a = b;
          b = c;
          c = d;
          d = 5;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '6')
        {
          a = b;
          b = c;
          c = d;
          d = 6;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '7')
        {
          a = b;
          b = c;
          c = d;
          d = 7;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '8')
        {
          a = b;
          b = c;
          c = d;
          d = 8;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '9')
        {
          a = b;
          b = c;
          c = d;
          d = 9;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        inpws += key;
        if (z>4)
        {
          inpws ="";
          z=0;
        }
      }
      else if (key == 'D')
      {
        kondisi = 4;
        a = b = c = d = 0;
      }
      else if (key == 'C')
      {
        
        a = b = c = d = total = 0;
        inpws = "";
      }
      else if (key == '*')
      {
        
        kondisi = 0;
        lcd.clear();
      }
    }
    tm.showNumberDec(total, true);
  }
  while (kondisi == 4)
  {
    char key = keypad.getKey();
    
    if (inpws == password)
    {
      lcd.setCursor(0,0);
      lcd.print("COUNTER UP");
      if (key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '*' && key != '#')
      {
        if (key == '0')
        {
          a = b;
          b = 0;
          cout = (a*10) + b;
        }
        else if (key == '1')
        {
          a = b;
          b = 1;
          cout = (a*10) + b;
        }
        else if (key == '2')
        {
          a = b;
          b = 2;
          cout = (a*10) + b;
        }
        else if (key == '3')
        {
          a = b;
          b = 3;
          cout = (a*10) + b;
        }
        else if (key == '4')
        {
          a = b;
          b = 4;
          cout = (a*10) + b;
        }
        else if (key == '5')
        {
          a = b;
          b = 5;
          cout = (a*10) + b;
        }
        else if (key == '6')
        {
          a = b;
          b = 6;
          cout = (a*10) + b;
        }
        else if (key == '7')
        {
          a = b;
          b = 7;
          cout = (a*10) + b;
        }
        else if (key == '8')
        {
          a = b;
          b = 8;
          cout = (a*10) + b;
        }
        else if (key == '9')
        {
          a = b;
          b = 9;
          cout = (a*10) + b;
        }
      }
      else if (key == 'D')
      {
        kondisi = 5;
        lcd.clear();
        a = b = 0;
      }
      else if (key == 'C')
      {
        
        a = b = cout = 0;
      }
      tm.showNumberDec(cout, 0, 0);
    }
    }
    else 
    {
      lcd.setCursor(0,0);
      lcd.print("TRY AGAIN");
      digitalWrite(pbuzzer, HIGH);
      delay (1000);
      a = b = c = d = total = 0;
      tm.showNumberDec(total, true);
      inpws = "";
      kondisi = 0;
      lcd.clear();
    }
    
  
  }

  while (kondisi == 5)
  {
    lcd.setCursor(0,0);
    lcd.print("COUNTING UP");
    char key = keypad.getKey();
    for (cin = 0; cin <=cout; cin++)
    {
      pos = cin;
      myservo.write(pos);
      tm.showNumberDec(cout, cin);
	    delay(500);
    }
    tm.showNumberDec(0, true);
    kondisi = 0;
    lcd.clear();
  }
}
